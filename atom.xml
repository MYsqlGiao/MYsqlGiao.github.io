<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>🥝明于のBlog</title>
  
  <subtitle>~欢迎呀</subtitle>
  <link href="https://www.zmyo.top/atom.xml" rel="self"/>
  
  <link href="https://www.zmyo.top/"/>
  <updated>2022-09-22T09:00:00.000Z</updated>
  <id>https://www.zmyo.top/</id>
  
  <author>
    <name>纪棠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windows服务器</title>
    <link href="https://www.zmyo.top/undefined/winserver.html"/>
    <id>https://www.zmyo.top/undefined/winserver.html</id>
    <published>2022-09-22T09:00:00.000Z</published>
    <updated>2022-09-22T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p> dhcp服务器</p><p>手动更新租约：ipconfig/renew</p><p>释放租约：ipconfig/release</p>]]></content>
    
    
    <summary type="html">winserver</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>时间轴</title>
    <link href="https://www.zmyo.top/undefined/time.html"/>
    <id>https://www.zmyo.top/undefined/time.html</id>
    <published>2022-09-22T09:00:00.000Z</published>
    <updated>2022-09-22T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6c6b9ace767542c770706f20302e7f72a4b26d8c5477f38b2a38f8d34732008b">97b9f826b4a8898218d0f8db717b56919681efed886976bc8cce1984f9f53981e8f55af278fbd85c8980bacd20f58cb9370e69ee0e8ca6a5ef0366f8efbe3db10c297e109ea8b238b69496bf7550effbb5859f1f38fdd917ebf03ef1426bd9a655850d5f5589e0be8007dea92ebd21add39b6bc0318efee4c088bfd8b5bfee00885ed307c043694566bcceb3da4bc5b277cd17bc2fd3aa8bbcd50a84d23e5a410e8ca305df5b16c59f987671bb18096b6107a81a3840c8dbea1eaae9bc7795ffdb17ff177ceba7f5fead4fe28e544d1bec95da1ad1e405ada765edaa6c10058f3117648e6c3ee5de232d333c59ad77a4d6daa3c95308136a894c1b0947da02dcf9cf29b24293a254a1e69ec7a9309a47fbff045fc5bdb9ff98daef3e1607811779c3463cdb35632d70d3f6f5544300bd40c86e0eebbf3cc26e5b4baf96638dda0ad93e576ef53dcb472f342e20d2784b01932e5163e709c80cc59a8bbc8a1c2e2cb482dcd34a4da36fd3b9de7bba9f5164243a466b9274e083c076bac7ebd2c9c0138699aec018dcc252ecae048025203d4b1a9beabf6602c94672fa85c3b536718f2db78ada5fed3351be3f723d7a47cf2955d0cce0539622dfe7787fb9f7a2764629e6ac59d31be9266e24a028a6629c9c3619ed0c3c49fbcc032700a71c1fc7b89bd47f7546650077ccb1a7e0459bf341aa03eb823f38779149c7c5c40b5bd0242d00808ff1db2d3a53906c46eb643cc42ee7263509dc5ed3573470f65dacd7bcf7ac289f425774b79eab8c01b986fbaeae89f8ac77014f1b13101ee82a8c7542e7e771b4a3937be948aba113324d3219ebfee5bc900ea782e2d759cc3ba5dde52c2a2b9c39798a479c7e255c4e385ab1fb79868bfabb10056fdd31eca989d42f91f0956615f298030a5ca67fe961d0a208a5adb3b0e29ecc281763dc7b28c850714c7403258c49ea5e1cfece426098f08fe5d9ac310812e36688065bd0b5686aada96983381fcc54e0e9e48dad2f3a17f8a316cd9e93faebda922c4147aaa9a10eda1c16372b065961c98c7392c4f1ae62912b51a763a74a3bafb8d0804ada9310be61a10b466ba2b10f35242bb0dc58f90d89382784d0da973557bf2a7fdcc93b61225c9cf045179cfb82672b450bac227f1b450b752afa358fad0209ae9de5296a836f42f254dd1615511b34be23239f60a021cf8efc0fe6db1a5b419752c6ae226e33677351ca67b5c4e4ed8dce0589ec672d9c4f119db63c7ef4ebfd525ee289a8160f1115e5ce9e19ba14bff0f089e3b884554d4843a9fd504cef0cf31f9b012f4e2b2d6dbac7b456f6cc7f64d8e00308387047a9db5b56b77d96d5f86d7252d758bff7607c0730135b0596a107e3b1401ca43776f2ab67145b0fee146dfd81aa8b4bbf03c39ce6f29ff5209344a45b53c6c6d29d81c9f2d3fed2ef2b24b3e528e717f3eef8a6c93317c22c58f2caf3aca7d7b96479364c1873e24052ea4c327146d0b734697b9e7c000fbbcf12866b89cc1979008e098e54ecf6b77c8d768c39614416c68c6bcd5b642146</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">测试加密，这里的密码是：</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">time</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>linux服务器</title>
    <link href="https://www.zmyo.top/undefined/linux.html"/>
    <id>https://www.zmyo.top/undefined/linux.html</id>
    <published>2022-09-21T16:00:00.000Z</published>
    <updated>2022-09-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>nmcli</p><p>nmcli connection show        #显示网卡会话</p><p>nmcli connection delete ens33        #删除网卡</p><p>nmcli connection add con-name st ifname ens33 type ethernet ipv4.addresses 192.168.1.12/24 ipv4.method manual</p><p>添加一个名字叫st的ens33类型网卡，IP地址为192.168.1.12，子网掩码为/24，为手动更改ip地址</p><p>nmcli connection up st        #启用网卡</p><p>systemctl strat networkmanager        #重启nmcli服务</p><p>modify                    #修改会话</p><p>添加多个网卡</p><p>命令行：（先重启服务或者网卡）nmcli connection modify st +ipv4.addresses 192.168.2.10/24</p><p>修改配置文件：cd /etc/sysconfig/network-scripts        #进入配置文件路径</p><p>​                        vim /ifcfg-st                                        #修改配置文件</p><p>​                        修改ipaddr和网关                                #从0开始排序</p><details class="folding-tag" blue><summary> 2022/9/28 </summary>              <div class='content'>              <p>ssh<br>    加密形式：公钥私钥（不对称加密）<br>    ssh为一种sysV服务，可使用“service指令来启动<br>    service sshd start<br>    systemctl start sshd<br>    ssh服务器监听的端口为22号端口<br>服务器端创建用户：<br>    useradd test    #创建用户test<br>    passwd  test    #为test用户设置密码<br>客户端配置：<br>（1）：客户端创建密钥：ssh-keygen<br>（2）：将客户端的公钥拷贝给SSH服务器<br>       客户端：ssh-copy-id user@192.168.1.200    #”user 为链接的ssh用户名”<br>ssh拷贝给服务器：<br>scp -r 123 user38@192.168.1.200:/home/user      #”-r  拷贝目录”</p>              </div>            </details><details class="folding-tag" blue><summary> 安全配置 </summary>              <div class='content'>              <p>+ls -Z</p><p>+chcon -t etc_t al</p><p>ls -Z al</p><p>semanage fcontext -a -t xxxx a1</p><p>restorecon -vRF a1</p><p>semanage port -a -t xxx -p xxx xxxxx    #添加端口</p><p>semanage port -d -t xxx -p xxx xxxxx    #删除端口</p><p>端口添加查询修改：例：ssh</p><p>firewall-cmd —list-all        #查询防火墙端口</p><p>firewall-cmd —permanent —add-port=12345/tcp        #添加tcp协议为12345端口</p><p>firewall-cmd —reload        #重启防火墙</p><p>semanage port -l | grep  ssh    #查询ssh相关</p><p>semanage port -a -t ssh_port_t -p tcp 12345        #给tcp12345添加安全上下文协议</p><p>vim /etc/ssh/sshd_config        编辑ssh端口文档——port 22——修改为port 12345</p><p>systemctl restart sshd    重启防火墙</p><p>链接：ssh user38@192.168.1.200 -p 12345</p><p>查询用户：grep bash /etc/passwd</p><p>查询IP：ifconfig</p>              </div>            </details>]]></content>
    
    
    <summary type="html">linux</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>IP承载</title>
    <link href="https://www.zmyo.top/undefined/cisco.html"/>
    <id>https://www.zmyo.top/undefined/cisco.html</id>
    <published>2022-09-19T14:00:00.000Z</published>
    <updated>2022-09-19T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>VLAN中继</p><p class='p center small'>多交换环境中的vlan</p><details class="folding-tag" blue><summary> 端口安全：违规模式 </summary>              <div class='content'>              <p>保护 限制 关闭</p>              </div>            </details><details class="folding-tag" green><summary> 端口安全：配置 </summary>              <div class='content'>              <p>控制台：line console 0</p><p>int f0/1</p><p>switchport mode access    设置端口通行</p><p>switchport port-security  开启安全模式</p><p>switchport port-security  mac-address sticky  动态</p><p>switchport port-security maximum 1   设置最大</p><p>Switch(config-if)#description pc1 //设置端口描述<br>Switch(config-if)#duplex full  //设置端口工作模式（全双工）<br>Switch(config-if)#speed 100  //设置端口速度 （为100MbPS）<br>Switch(config-if)#switchport mode access //端口连接模式（用户或接入）<br>Switch(config-if)#switchport port-security //开启端口安全功能<br>Switch(config-if)#switchport port-security mac-address ?<br> H.H.H  48 bit mac address  //具体MAC地址 //静态绑定<br> sticky Configure dynamic secure addresses as sticky //通过交换机学习的MAC地址<br>Switch(config-if)#switchport port-security mac-address sticky //绑定MAC地址<br>Switch(config-if)#switchport port-security maximum 1 //设置最大的MAC地址数<br>Switch(config-if)#switchport port-security violation ? //设置违例事件<br> protect  Security violation protect mode  //保护<br> restrict Security violation restrict mode  //限制<br> shutdown Security violation shutdown mode  //关闭<br>Switch(config-if)#switchport port-security violation shutdown //违规后直接关闭端口</p><p>路由器配置：<br>1、ip ssh version 2   查看ssh版本号    设置ssh2版本<br>2、enable secret 2022   配置特权模式口令<br>3、ip domain-name zmy.com   配置IP域<br>4、cry key generate rsa    设置RSA密钥对<br>5、username zmy secret sshmima    设置用户身份验证<br>6、line vty 0 10    配置vty线路<br>7、transport input ssh<br>8、login local<br>交换机配置：<br>int vlan 1<br>no shut<br>ip add 172.16.1.2 255.255.255.0    配置vlan地址<br>exit<br>ip default-gateway 172.16.1.1    配置交换机默认网关</p><p>ssh链接(主机)：ssh -l zmy 172.16.1.1</p>              </div>            </details><details class="folding-tag" yellow><summary> #####vtp创建 </summary>              <div class='content'>              <ol><li>vtp domain ni        #创建vtp域名</li><li>vtp mode server            #设置成服务器模式</li><li>vtp mode client                #设置为客户段模式</li><li>vtp mode transparent        #设置传输模式</li><li>vtp password 123            #设置vtp密码（客户端和服务器端密码一致）</li></ol>              </div>            </details><details class="folding-tag" blue><summary> 2022/09/26单臂路由 </summary>              <div class='content'>              <p>交换机：<br>需要对端口设置IP地址和vlan通信，链接计算机为access，链接路由器为trunk 设置本真vlan，native<br>路由器：int f0/0.11                        #进入子端口<br>        encencapsulation dot1Q 10       #设置端口协议<br>        IP add …..                    #配置IP地址</p><h1 id="多层路由"><a href="#多层路由" class="headerlink" title="多层路由"></a>多层路由</h1><pre><code>    二层交换机和三层交换机配相同配置的vlan，在三层上vlan配置IP地址    ip routing</code></pre>              </div>            </details><details class="folding-tag" blue><summary> channel-group </summary>              <div class='content'>              <p>1、int port 1</p><p>swi mode tr</p><p>进端口</p><p>chanel-goup 1 mode active</p><p>ip dhcp ex补全    （设置排除项）</p><p>IP dhcp pool     123（名字）</p><p>network 192.168.1.0 255.255.255.0（设置地址段）</p><p>defa(补全) 192.168.1.1    （设置默认网关）</p><p>dns（补全）1.1.1.1    （设置dns）</p><p>dhcp中继</p><p>进端口或者vlan</p><p>ip helper-address 10.2.2.2(下一跳)</p>              </div>            </details>]]></content>
    
    
    <summary type="html">cisco</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="https://www.zmyo.top/undefined/python.html"/>
    <id>https://www.zmyo.top/undefined/python.html</id>
    <published>2022-09-19T09:00:00.000Z</published>
    <updated>2022-09-19T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>python3中有六个标准的数据类型：<br>Number（数字）<br>  分三类：整型：不限制大小、无论多复杂的算式都可以直接得到结果<br>divmod<br>abs<br>十进制：无前缀<br>2进制：0b或0B<br>8进制：0o或0O<br>16进制：0x或0X<br>布尔类型（bool）：<br>True（真）<br>False（假）</p><pre><code>     浮点型 复数</code></pre><p>string（字符串）<br>List（列表）<br>Tuple（元组）<br>set（集合）<br>Dictionary（字典）</p><p>函数<br>说明<br>int（x）        将x字符串或数字转换为整型<br>float(x）    将x字符串或数字转换为浮点数<br>Str(X）        将对象×转换为字符串<br>chr（x）        将一个整数转换为对应的ASCII字符<br>ord(x）        将一个ASCII字符转换为对应的整数<br>bin()        将整数转换为2进制字符<br>list(s）        将序列s转换为一个列表<br>tuple(s）    将序列s转换为一个元组<br>Set(s）        转换为可变集合<br>dict(d）        转化为字典。d必须是一个（keyvalue）元组序列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">int3=111</span><br><span class="line">float3=3.14</span><br><span class="line">str3=&quot;曾明于&quot;</span><br><span class="line">list3 = [1,3.14,True,(1,2,3)]</span><br><span class="line">tuple3 = (1,&quot;曾明于&quot;,[1,2,3])</span><br><span class="line">set3 = &#123;1,3.14,&quot;曾明于&quot;,None,(1,2,3)&#125;</span><br><span class="line">dic3 = &#123;1:&quot;123&quot;,2:&quot;six&quot;,3:&quot;qwer&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="变量和常量ceshi"><a href="#变量和常量ceshi" class="headerlink" title="变量和常量ceshi"></a>变量和常量ceshi</h5><p>1、变量的概念</p><p>​        在程序的运行过程中，其值可以改变的量，叫做变量</p><p>2、变量的三大特性</p><p>​        值：vlaue</p><p>​        内存地址：id</p><p>​        变量的类型：type</p><h5 id="变量的创建、修改、引用变量"><a href="#变量的创建、修改、引用变量" class="headerlink" title="变量的创建、修改、引用变量"></a>变量的创建、修改、引用变量</h5><p>一、python中创建变量无需事先声明变量名和变量的类型，直接赋值即可；</p><p>1）基本赋值</p><p>变量名 = 表达式</p><p>例： name = “张三”</p><p>2）合并赋值</p><p>变量名1=变量名2=……=表达式</p><p>3）按顺序依次赋值</p><p>变量名1，变量名2,……=表达式1，表达式2，……</p><p>4）复合赋值</p><p>变量名 复合赋值运算符 表达式</p><h5 id="变量的应用"><a href="#变量的应用" class="headerlink" title="变量的应用"></a>变量的应用</h5><p>变量出现在赋值运算符的左边即为赋值，否则都为引用</p><h5 id="变量名的命名规范"><a href="#变量名的命名规范" class="headerlink" title="变量名的命名规范"></a>变量名的命名规范</h5><p>变量名属于标识符，其命名要求同标识符要求一样</p><p>建议：选择有意义的单词作为变量名，提高程序的可读性</p><p>不要使用内置名称作为变量名</p><h5 id="变量名的命名风格"><a href="#变量名的命名风格" class="headerlink" title="变量名的命名风格"></a>变量名的命名风格</h5><p>风格一：驼峰法</p><p>风格二：下划线法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; AgeOfBob = 18#大驼峰命名法</span><br><span class="line">&gt;&gt;&gt; ageOfBob = 18 #小驼峰命名法</span><br><span class="line">&gt;&gt;&gt; age_of_bob = 18#下划线命名法</span><br></pre></td></tr></table></figure><h5 id="变量的特点"><a href="#变量的特点" class="headerlink" title="变量的特点"></a>变量的特点</h5><p>1、 变量的类型随赋的值的类型改变</p><p>2、变量的取值采用的是基于值的内存管理方式保存其取值</p><p>为不同的变量赋予相同的值，在内存中该值只有一份，其同享同一个内存空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">x = 5</span><br><span class="line">y = 5</span><br><span class="line"></span><br><span class="line">print(id(x))</span><br><span class="line">print(id(y))</span><br></pre></td></tr></table></figure><p>文件模式：只要为不同的变量赋予相同的值，这些变量就是同享同一个内存空间。</p><p>交互式模式：</p><p>同语句：只要为不同的变量赋予相同的值，这些变量就是同享同一个内存空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a = b = 5</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140715425453856</span><br></pre></td></tr></table></figure><p>不同语句：为不同的变量赋予[-5.256]区域的整数才共享空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a = 5</span><br><span class="line">&gt;&gt;&gt; b = 5</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; a = -10</span><br><span class="line">&gt;&gt;&gt; b = -10</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">2163999931504</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">2163999931536</span><br></pre></td></tr></table></figure><h5 id="pyhton变量"><a href="#pyhton变量" class="headerlink" title="pyhton变量"></a>pyhton变量</h5><p>自动内存管理功能</p><p>Python具有自动内存管理功能，对于没有任何变量指向的值，Python自动将其删除。<br>显式使用del命令删除不需要的值或显式关闭不再需要访问的资源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del a#del 对象名</span><br></pre></td></tr></table></figure><h5 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h5><p>在python中没有专门的语法定义常量，约定全部用大写的变量名表示常量。例：PI=3.1415926。</p><p>常量的使用和变量的使用完全一致，本质还是变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; PI = 3.14</span><br></pre></td></tr></table></figure><h5 id="4、运算符和表达式"><a href="#4、运算符和表达式" class="headerlink" title="4、运算符和表达式"></a>4、运算符和表达式</h5><p>（1）算术运算符</p><p>+</p><p>-</p><ul><li>​      乘法</li></ul><p>/            除法运算，结果保留小数    5 / 2 = 2.5</p><p>//            取整数运算，结果向下取整    -5 // 2 = -3</p><p>%            取余运算    10 % 4 =  2</p><p><strong>            幂运算        2 </strong> 3 = 8</p><p>（2）比较（关系）运算符</p><p>大于         &gt;</p><p>大于等于   &gt;=</p><p>小于          &lt;</p><p>小于等于    &lt;=</p><p>等于           =</p><p>不等于        !=</p><p>（3）赋值运算符</p><p>基本赋值            a = 5</p><p>合并赋值            a = b = c = 10</p><p>按顺序依次赋值   a,b,c = 5,10,15</p><p>复合赋值             a <em>= 2    相当于 a = a</em>2            #a变量必须先创建</p><p>海象运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; str1 = &quot;hello world&quot;</span><br><span class="line">&gt;&gt;&gt; if (length := len(str1)) &gt; 0 :</span><br><span class="line">print(f&quot;字符串的长度为&#123;length&#125;&quot;)</span><br><span class="line"></span><br><span class="line">字符串的长度为11</span><br></pre></td></tr></table></figure><p>（4）逻辑运算符</p><p>与            表达式1    and    表达式2        #返回的是最后一个被计算的表达式的值</p><p>​                                                            #表达式1为真时，表达式2才执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a,b,c=5,10,15</span><br><span class="line">&gt;&gt;&gt; (x := a &gt; b) and (y := b &gt; c)</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; x</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; a and (y := b &gt; c)</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>或            表达式1    or       表达式2                #返回的是最后一个被计算的表达式的值</p><p>​                                                                    #表达式1为假是，表达式2才执行<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a or b</span><br><span class="line">5</span><br><span class="line">&gt;&gt;&gt; &quot;&quot; or b</span><br><span class="line">10</span><br></pre></td></tr></table></figure></p><p>非            not    表达式                                        #相当于取反</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; not a</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; not &quot;&quot;</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>（5）位运算符</p><p>位与            操作数1        &amp;        操作数2            #同为1，则为1，否则为0</p><p>位或             操作数1        |         操作数2            #有1则为1，否则为0</p><p>位异或          操作数1        ^          操作数2            #相同为0，相异为1</p><p>位取反~                        ~操作数                            #0变1，1变0</p><p>左移位&lt;&lt;                                                            #高位移出，低位补0</p><p>友移位&gt;&gt;                                                            #低位移出，高位原来是什么就补什么</p><p>（6）成员运算符</p><ul><li>作用：测试某个对象是否是序列（字符串、列表、元组、集合、字典）的成员</li></ul><p>运算符：in                #判断是序列的成员</p><p>​            not    in         #</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;a&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>（7）同一性测试运算符</li></ul><p>作用：判断不同的对象是否引用于同一内存单元。（判断内存地址是否一样）</p><p>运算符：is            #判断是同一内存单元</p><p>​            is    not    #判断不是同一内存单元</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> <span class="keyword">not</span> b</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = -<span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = -<span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><ul><li>（8）集合运算符</li></ul><p>作用：求集合的交集、并集、差集、对称差集，集合的比较</p><p>运算符：</p><p>​            交集    &amp;</p><p>​            并集    |</p><p>​            差集    -</p><p>​            对称差集    ^</p><p>​            集合的比较用的关系运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">a&amp;b = &#123;<span class="number">1</span>,<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">a|b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">a-b = &#123;<span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line">a^b = &#123;<span class="number">2</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><p>运算符优先级：使用圆括号可以改变表达式计算的优先级</p><p>注意：逗号不是运算符，为普通分隔符；python不支持自加（++）和自减（—）</p><h5 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h5><p>（1）输入函数—input（）</p><p>形式和返回值：变量 = input(“提示语句”)        #输入的数据（返回值）为字符串类型</p><p>​    输入一个数据：变量 = input(“提示语句”)</p><p>​    输入多个数据（指定输入分隔符）：需使用字符串的split()方法指定输入分隔符</p><p>​        变量 = input(“提示语句”).split(“指定分隔符”)        #分隔符默认为空格</p><p>​                                                                                #输入的数据以字符串类型的列表来保存<br>将输入的数据转化为需要的类型:</p><p>​    单一数据类型转换：</p><p>​        使用对应的内置函数即可：</p><p>​        int(input(“提示语句”))                                    #转化为整型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个整数：&quot;</span>))</span><br><span class="line">请输入一个整数：<span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>​        float(input(“提示语句”))                                #转化为浮点型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">float</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个浮点数：&quot;</span>))</span><br><span class="line">请输入一个浮点数：<span class="number">3.14</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(b)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>​        bool(input(“提示语句”))                                #转化为布尔类型</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>c = <span class="built_in">bool</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入一个数转换为布尔值：&quot;</span>))</span><br><span class="line">请输入一个数转换为布尔值：hello</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>c</span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><p>​    复合数据类型转化：</p><p>​        map(函数，可迭代序列)                    #把指定的函数映射到可迭代上</p><p>​        list()                                                #转换为列表</p><p>​        tuple()                                             #转换为元组</p><p>​        set()                                                #转化为集合</p><p>​        dict()                                                #转化为字典</p><p>​        zip()                                                #从每个可迭代序列中依次一个元素打包成元祖</p><p>​        例如：从键盘输入多个整数，然后以列表的方式进行保存</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>(<span class="string">&quot;输入多个整数：&quot;</span>).split()))</span><br><span class="line"><span class="comment">#解读：以列表(list)方式保存多个(map)整数(int)</span></span><br><span class="line">输入多个整数：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">tuple</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>(<span class="string">&quot;输入多个整数：&quot;</span>).split()))</span><br><span class="line">输入多个整数：<span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">(<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="built_in">set</span>(<span class="built_in">map</span>(<span class="built_in">int</span>,<span class="built_in">input</span>(<span class="string">&quot;输入多个整数：&quot;</span>).split()))</span><br><span class="line">输入多个整数：<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span> <span class="number">2</span> <span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="（2）输出函数—print"><a href="#（2）输出函数—print" class="headerlink" title="（2）输出函数—print"></a>（2）输出函数—print</h5><p>1）形式</p><p>print(value,…,sep=’’,end=’\n’,file=sys.stdout,flush=False)</p><p>参数：</p><p>value    输出对象，输出多个对象时，需要用逗号分隔</p><p>sep        输出对象分隔符，默认值是一个空格。</p><p>end        输出结尾符。默认值是换行符。<br>file          指定将内容输出到哪里，sys.stdout默认输出到屏幕。<br>flush        是否刷新缓冲区（写文件时才设置），默认为False</p><p>4）字符串的格式化输出</p><p>即输入的时候如何引用变量，与input函数中引用变量是一样的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;name = ”张三”</span><br><span class="line">&gt;&gt;&gt;age=<span class="number">20</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>（<span class="string">&quot;%s的年龄为%d&quot;</span>%（name，age））</span><br><span class="line">张三的年龄为<span class="number">20</span></span><br><span class="line">&gt;&gt;&gt;<span class="built_in">print</span>（“的年龄为&#123;&#125;<span class="string">&quot;.format（name，age））</span></span><br><span class="line"><span class="string">张三的年龄为20</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;print（f”&#123;fname]的年龄为fage&#125;”）</span></span><br><span class="line"><span class="string">张三的年龄为20</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>5)输出重定向</p><p>即将输出的内容保存到文件。</p><p>例如：计算变量a、b的和以及差，并将结果保存到“C\UsersVAdministrator\Desktopl结果.txt”文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入a的值：&quot;</span>))</span><br><span class="line"></span><br><span class="line">b= <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入b的值：&quot;</span>))</span><br><span class="line"></span><br><span class="line">result1 =  a+b</span><br><span class="line"></span><br><span class="line">result2 =  a-b</span><br><span class="line"></span><br><span class="line">path = <span class="string">r&quot;D:\桌面\桌面\123.txt&quot;</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(path,<span class="string">&quot;w&quot;</span>)      <span class="comment">#以写的方式打开path变量指定的文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;a&#125;</span>+<span class="subst">&#123;b&#125;</span>=<span class="subst">&#123;result1&#125;</span>&quot;</span>,<span class="string">f&quot;<span class="subst">&#123;a&#125;</span>-<span class="subst">&#123;b&#125;</span>=<span class="subst">&#123;result2&#125;</span>&quot;</span>,sep = <span class="string">&quot;\n&quot;</span>,file = f)</span><br><span class="line"></span><br><span class="line">f.close                             <span class="comment">#关闭文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6.代码编写规范</p><p>缩进：以冒号开始，缩进结束，代码块就结束（缩进一致才属于一个代码块）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> today == <span class="string">&quot;Mon&quot;</span> <span class="keyword">and</span> hour <span class="number">14</span> ：</span><br><span class="line">   <span class="built_in">print</span>（<span class="string">&quot;正在打折，赶紧选购！“）</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">print(&quot;</span>He11o wor7d”）<span class="comment">#不属于计执行体</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注释：</p><p>​        单行注释用</p><p>​        多行注释用三引号</p><p>​        中文编码声明注释：<br>​        #-coding:utf-8</p><p>​        模块导入:import 模块名                    #单次导入一个</p><p>​        字符串换行</p><p>​        提高代码的可读性：适量加上空格和空白行</p><h5 id="7、对象的删除"><a href="#7、对象的删除" class="headerlink" title="7、对象的删除"></a>7、对象的删除</h5><p>Python具有自动内存管理功能：Python解释器会跟踪所有的值，一旦发现某个值不再有任何变量指向，将会自动删除该值。</p><p>del        对象名</p><p>del a[0]                #不能删除元组的元素</p><p>del a                    #可以删除整个元组</p><p>del s[]</p><h5 id="模块的导入与使用"><a href="#模块的导入与使用" class="headerlink" title="模块的导入与使用"></a>模块的导入与使用</h5><p>（1）模块导入方式</p><p>1）导入整个模块</p><p>import    模块名    [as    别名]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>math.sqrt(<span class="number">9</span>)</span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> math <span class="keyword">as</span> mt</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mt.sqrt(<span class="number">16</span>)</span><br><span class="line"><span class="number">4.0</span></span><br></pre></td></tr></table></figure><p>2）导入模块的某个对象（访问速度快）</p><p>from    模块名    import    对象名    [as    别名]</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> math <span class="keyword">import</span> sqrt</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sqrt(<span class="number">9</span>)</span><br><span class="line"><span class="number">3.0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> math <span class="keyword">import</span> sqrt <span class="keyword">as</span> sq</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sq(<span class="number">25</span>)</span><br><span class="line"><span class="number">5.0</span></span><br></pre></td></tr></table></figure><p>（2）模块的查找顺序</p><p>当前目录<br>sys模块的path变量所指定的目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path</span><br><span class="line">[<span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;F:\\python\\Lib\\idlelib&#x27;</span>, <span class="string">&#x27;F:\\python\\python38.zip&#x27;</span>, <span class="string">&#x27;F:\\python\\DLLs&#x27;</span>, <span class="string">&#x27;F:\\python\\lib&#x27;</span>, <span class="string">&#x27;F:\\python&#x27;</span>, <span class="string">&#x27;C:\\Users\\GIAO\\AppData\\Roaming\\Python\\Python38\\site-packages&#x27;</span>, <span class="string">&#x27;F:\\python\\lib\\site-packages&#x27;</span>]</span><br></pre></td></tr></table></figure><p>（3）模块的导入顺序</p><p>标准库<br>第三方扩展库<br>自己开发的库</p><p>3.Python脚本的”<em>name</em>“属性</p><p>作用：通过“<strong>name</strong>“属性可判断代码是被直接运行，还是以模块方式导入到其他程序<br>中运行<br>原因：如果脚本独立运行，“<em>name</em>“的值被自动设置为”<em>main</em>”；如果脚本作为模<br>块导入，则”<em>name</em>“属性的值被自动设置为模块名。</p><p><img src="https://static.dingtalk.com/media/lQLPJxa798yOB1HNCCPNBJSw8_05fMH6OKUDNQhzaAAFAA_1172_2083.png_720x720q90g.jpg?bizType=im" alt="img" style="zoom:25%;" /></p><p>5.Python程序打包为可执行程序</p><p>工具：<br>py2exe    （仅适用于Windows平台）、pyinstaller、cxFreeze等<br>以pyinstaller为例：<br>第一步：命令行安装pyinstaller模块<br>pip install pyinstaller<br>第二步：切换到程序所在目录<br>第三步：生成exe文件<br>pyinstaller-Fpy文件</p><p>第三章 python序列</p><p>1、序列概述</p><p>（2）、序列的概念</p><p>序列是一块用来存放多个值的连续空间。</p><p><img src="C:\Users\GIAO\AppData\Roaming\Typora\typora-user-images\image-20221010191418395.png" alt="image-20221010191418395" style="zoom:33%;" /></p><p>有序序列：可以通过下标访问</p><p>不可变序列：不能修改其元素，不可变性相比较其他可变对象，更加安全、更易于维护、也更加节省资源。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse = [<span class="string">&quot;春眠不觉晓&quot;</span>,<span class="string">&quot;Python不得了&quot;</span>,<span class="string">&quot;夜来爬数据&quot;</span>,<span class="string">&quot;好评知多少&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[<span class="number">0</span>]</span><br><span class="line"><span class="string">&#x27;春眠不觉晓&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[<span class="number">1</span>]</span><br><span class="line"><span class="string">&#x27;Python不得了&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[-<span class="number">3</span>]</span><br><span class="line"><span class="string">&#x27;Python不得了&#x27;</span></span><br></pre></td></tr></table></figure><p>（3）序列切片<br>作用：同时提取序列中的多个元素<br>格式：序列名[start : end : step]<br>            start:起始位置，默认为0<br>            end:结束位置（取出的元素不包含该位置的元素），默认为序列的长度<br>            step:步长，默认为1（此时最后一个冒号可以省略）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse = [<span class="string">&quot;春眠不觉晓&quot;</span>,<span class="string">&quot;Python不得了&quot;</span>,<span class="string">&quot;夜来爬数据&quot;</span>,<span class="string">&quot;好评知多少&quot;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[<span class="number">0</span>::<span class="number">2</span>]</span><br><span class="line">[<span class="string">&#x27;春眠不觉晓&#x27;</span>, <span class="string">&#x27;夜来爬数据&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">[<span class="string">&#x27;Python不得了&#x27;</span>, <span class="string">&#x27;夜来爬数据&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[:<span class="number">3</span>]</span><br><span class="line">[<span class="string">&#x27;春眠不觉晓&#x27;</span>, <span class="string">&#x27;Python不得了&#x27;</span>, <span class="string">&#x27;夜来爬数据&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>verse[:]</span><br><span class="line">[<span class="string">&#x27;春眠不觉晓&#x27;</span>, <span class="string">&#x27;Python不得了&#x27;</span>, <span class="string">&#x27;夜来爬数据&#x27;</span>, <span class="string">&#x27;好评知多少&#x27;</span>]</span><br></pre></td></tr></table></figure><p>切片时方括号中最多省略一个冒号，只能省略步长前面的冒号<br>如果方括号中只有一个冒号，那么省略的冒号为步长前面的冒号</p><p>（4）序列相加<br>    在Python中，支持同类型的序列相加，即序列进行连接。<br>    序列只能是列表、元组、字符串。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]+[<span class="string">&quot;first&quot;</span>,<span class="string">&quot;second&quot;</span>]</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="string">&#x27;first&#x27;</span>, <span class="string">&#x27;second&#x27;</span>]</span><br><span class="line"><span class="comment">#不能集合+集合</span></span><br><span class="line"><span class="comment">#不能字典+字典</span></span><br></pre></td></tr></table></figure><p>（5）序列乘法<br>在Python中，一个序列乘以一个正整数n会生成新的序列。新序列的元素为原来序列元素被重复n次。<br>序列只能是列表、元组和字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]*<span class="number">2</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)*<span class="number">2</span></span><br><span class="line">(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;hello&quot;</span>*<span class="number">3</span></span><br><span class="line"><span class="string">&#x27;hellohellohello&#x27;</span></span><br></pre></td></tr></table></figure><p>序列乘法还可以实现初始化指定长度的列表或元组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = [<span class="literal">None</span>]*<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (<span class="literal">None</span>,)*<span class="number">4</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">(<span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>（6）成员判断</p><p>in 和 not in</p><p>（7）计算序列的长度、最大值和最小值</p><p>lenmax()、min()</p><p>2.列表</p><p>格式：[1,”Hello”,3.14,True(1.2.3)</p><p>一个列表中的元素的数据类型可以不相同，但建议元素数据类型一样以提高程序的可读性。</p><p>列表创建：</p><p>方法二：使用list0将可达代对象转换为列表<br>格式：list（可送代对象）<br>可送代对象：只能是字符串、元组、集合、range/zip/enumerate等对象。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(a)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">[<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure><p>创建空列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = (<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(a)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">[<span class="string">&#x27;h&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;l&#x27;</span>, <span class="string">&#x27;o&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">list</span>(&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = []</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(a)</span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a</span><br><span class="line">[]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="built_in">list</span>()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">type</span>(a)</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">len</span>(a)</span><br><span class="line"><span class="number">0</span></span><br></pre></td></tr></table></figure><p>2）列表的删除</p><p>格式：del列表名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a_list = [<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">9</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> a_list</span><br></pre></td></tr></table></figure><p>(3)遍历列表</p><p>4）列表元素的添加、修改和删除</p><p>添加、修改和删除列表元素也称为更新列表</p><p>1）添加元素</p><p>列表名.append（元素）在列表的末尾追加元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    phones = [<span class="string">&quot;华为&quot;</span>, <span class="string">&quot;小米&quot;</span>, <span class="string">&quot;魅族&quot;</span>, <span class="string">&quot;中兴&quot;</span>]</span><br><span class="line">    phones.append(<span class="string">&quot;oppo&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(phones)</span><br></pre></td></tr></table></figure><p>列表名.insert（下标，元素）向列表中插入元素（效率低，不推荐使用）</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    phones = [<span class="string">&quot;华为&quot;</span>, <span class="string">&quot;小米&quot;</span>, <span class="string">&quot;魅族&quot;</span>, <span class="string">&quot;中兴&quot;</span>]</span><br><span class="line">    phones.insert(<span class="number">0</span>,<span class="string">&quot;oppo&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(phones)</span><br></pre></td></tr></table></figure><p>列表名.extend可送代对象）将另一个可达代对象中的全部元素添加到列表中</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    current_list = [<span class="string">&quot;迈克尔·乔丹&quot;</span>, <span class="string">&quot;卡里姆·阿布杜尔·贾巴尔&quot;</span> , <span class="string">&quot;哈基姆·奥拉朱旺&quot;</span>, <span class="string">&quot;查尔斯·巴克利&quot;</span>, <span class="string">&quot;姚明&quot;</span>]</span><br><span class="line"></span><br><span class="line">    new_stars = [<span class="string">&quot;贾森·基德&quot;</span>, <span class="string">&quot;史蒂夫·纳什&quot;</span>, <span class="string">&quot;格兰特·希尔&quot;</span>]</span><br><span class="line"></span><br><span class="line">    current_list.extend(new_stars)</span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(current_list)</span><br></pre></td></tr></table></figure><p>“+”：列表的合并</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>extend0与”+的区别：<br>extendo：其参数为可送代序列，会修改原序列<br>“+”：只能是同类型序列相加，本身不改变原序列</p><p>2）修改元素</p><p>格式：列表名[下标] = 值</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br><span class="line">    verse[<span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><p>3）删除元素</p><p>方法一：根据索引（下标）删除</p><p>del列表名[下标]</p><p>列表名.pop([下标=-1])    #默认删除最后一个元素</p><p>两种方法正向素引和反向素引都可以</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    <span class="keyword">del</span> verse[-<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    verse.pop[<span class="number">1</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><p>方法二：根据元素值删除元素</p><p>列表名.remove（元素）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br><span class="line">    verse.remove(<span class="string">&quot;古道边&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><p>方法二：根据元素值删除元素</p><p>列表名.remove（元素）</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;一行白鹭上青天&quot;</span> <span class="keyword">in</span> verse:</span><br><span class="line">        verse.remove(<span class="string">&quot;古道边&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><p>注意：在remove()之前必须判断元素是否存在</p><p>​            remove()删除时，如果有多个相同的元素，只删除第1个</p><p>方法三：删除列表所有元素，也即清空列表，但保留列表对象</p><p>​            格式：列表名.clear()</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    verse = [<span class="string">&quot;长亭外&quot;</span>, <span class="string">&quot;古道边&quot;</span>, <span class="string">&quot;芳草碧连天&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br><span class="line">    verse.clear()</span><br><span class="line">    <span class="built_in">print</span>(verse)</span><br></pre></td></tr></table></figure><p>（5）列表排序<br>1）使用列表对象的sort（方法</p><p>格式：listname.sort(key=None,reverse=False）</p><p>参数说明</p><p>listname：要排序的列表</p><p>key：指定从每个元素中比较的键，默认为字典排序</p><p>reverse:可选参数，True则表示降序排列：False则表示升序排列，默认为升序排列</p><p>例：成绩排序</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    grade = [<span class="number">98</span>, <span class="number">99</span>, <span class="number">97</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">96</span>, <span class="number">94</span>, <span class="number">89</span>, <span class="number">95</span>, <span class="number">100</span>]</span><br><span class="line">    grade.sort(key=<span class="literal">None</span>,reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;降序序：&#x27;</span>,grade)</span><br><span class="line">    grade.sort(key=<span class="literal">None</span>, reverse=<span class="literal">False</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;升序：&#x27;</span>, grade)</span><br></pre></td></tr></table></figure><p>2）使用sorted0内置函数</p><p>格式：sorted(iterable,key=None,reverse=False）<br>参数说明：<br>iterable：要排序的序列<br>key：指定从每个元素中比较的键，默认为字典排序<br>reverse:可选参数，True则表示降序排列;False则表示升序排列，默认为升序排列</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    char = [<span class="string">&#x27;cat&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;Angela&#x27;</span>,<span class="string">&#x27;prt&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;原顺序:&quot;</span>,char)</span><br><span class="line"></span><br><span class="line">    char_as = <span class="built_in">sorted</span>(char)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;升序排序：&quot;</span>,char_as)</span><br><span class="line"></span><br><span class="line">    char_des = <span class="built_in">sorted</span>(char,reverse=<span class="literal">True</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;降序排序：&quot;</span>,char_des)</span><br></pre></td></tr></table></figure><p>列表.sort()方法和内置sorted（）函数的区别：</p><p>列表.sort（）：会改变原列表的元素排列顺序</p><p>sorted()：会建立一个原列表的副本，该副本为排序后的列表</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/7331d4609e8e8.png"/></div></div><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>char = [<span class="string">&#x27;cat&#x27;</span>,<span class="string">&#x27;Tom&#x27;</span>,<span class="string">&#x27;Angela&#x27;</span>,<span class="string">&#x27;prt&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>char.index(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>char.count(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>char.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>char</span><br><span class="line">[<span class="string">&#x27;prt&#x27;</span>, <span class="string">&#x27;Angela&#x27;</span>, <span class="string">&#x27;Tom&#x27;</span>, <span class="string">&#x27;cat&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = char</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = char.copy()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(char)</span><br><span class="line"><span class="number">1844677014528</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(a)</span><br><span class="line"><span class="number">1844677014528</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">id</span>(b)</span><br><span class="line"><span class="number">1844687118592</span></span><br></pre></td></tr></table></figure><p>（6）列表推导式<br>1）生成指定范围的数值列表<br>格式：listname=[Expression for var in range]<br>说明：<br>        listname：列表名称<br>        Exoression：表达式：用干计算新列表的元素</p><h5 id="二维列表"><a href="#二维列表" class="headerlink" title="二维列表"></a>二维列表</h5><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    arr = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):         <span class="comment">#i行的下标</span></span><br><span class="line">        arr.append([])         <span class="comment">#([])</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):     <span class="comment">#j列的下标</span></span><br><span class="line">            arr[i].append(i+j)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#arr = [[i+j for j in range(5) ] for i in range(4)]</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(arr)</span><br></pre></td></tr></table></figure><h5 id="（1）元组的创建和删除"><a href="#（1）元组的创建和删除" class="headerlink" title="（1）元组的创建和删除"></a>（1）元组的创建和删除</h5><p>1）使用赋值运算符直接创建元组</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/af3ac4f713cf9.png"/></div></div><p>注意事项：</p><p>​            元组中只包含一个元素时，必须在元素后面添加逗号，无逗号时括号会被当做运算符使用。</p><p>​            以逗号隔开，无其他符号的对象，默认为元组。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/bd4398fe262d4.png"/></div></div><p>2）使用tuple()将其他可迭代序列转换为元组</p><p>格式：tuple(可迭代对象)</p><p>可迭代对象：只能是字符串、列表、集合、range/zip/enumerate等对象。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/834fcda25f5cb.png"/></div></div><p>（2）元组元素的访问<br>方法与列表元素的访问方法一样：<br>        访问整个元组：元组名<br>        访问某个元素：元组名【下标]<br>        切片访问多个元素：元组名[起始下标：结束下标：步长]<br>        用循环遍历元组，与遍历列表方法类似</p><p>（3）元组的修改</p><p>不能修改元组的某个元素，因为元组为不可变序列。</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/8a85a7c86e855.png"/></div></div><p>可以通过重新赋值修改元组</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/e0f9e72aeb39c.png"/></div></div><p>可以对元组进行链接（元组加元组）</p><p>3）创建空元组</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/182c8ce3c20f8.png"/></div></div><p>空元组没有太大的意义，因为其不可变</p><p>4）删除元组</p><p>格式：del 元组名</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> tup1</span><br><span class="line"><span class="keyword">del</span> tup2</span><br></pre></td></tr></table></figure><p>注意：不能删除元组的元素</p><p>（4）元组推导式</p><p>元组推导式和列表推导式类似</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/f93134e7814ff.png"/></div></div><p>原生成器对象遍历后，元素会被删除，如果想在使用生成器对象，必须重新创建生成器对象。</p><p>（5）元组与列表的区别</p><p>列表属于可变序列，元组属于不可变序列。列表不能作为字典的键，而元组则可以。<br>元组比列表的访问和处理速度快，所以当只是需要对其中的元素进行访问，而不进行任何修改时，建议使用元组。</p><h5 id="4、集合"><a href="#4、集合" class="headerlink" title="4、集合"></a>4、集合</h5><p>集合（set）是一个无序的，元素不重复的序列。</p><p>集合的应用：元素去重</p><p>（1）集合的创建和删除</p><p>1）使用{}创建集合</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set1 = &#123;<span class="string">&quot;水瓶座&quot;</span>,<span class="string">&quot;射手座&quot;</span>,<span class="string">&quot;双鱼座&quot;</span>,<span class="string">&quot;双子座&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">set2 = &#123;<span class="number">3</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">5</span>,<span class="number">9</span>,<span class="number">2</span>,<span class="number">6</span>&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><p>​        创建集合时，如果输入的元素重复，最终只保留一个</p><p>​        集合是无序的，因此每次输出的结果排列顺序可能不同</p><p>2）使用set（）创建集合</p><p>格式：集合名 = set(可迭代序列)</p><p>可迭代对象：字符串、列表、元组、range对象等</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/f488722aa389a.png"/></div></div><p>注意：被转换的序列中不能包含可变数据类型</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/f63a48917c01c.png"/></div></div><p>注意：</p><p>​        创建空集合只能使用set()，因为{}用来创建空字典</p><p>3）删除集合</p><p>格式：del 集合名</p><p>（2）集合元素的添加和删除</p><p>1）添加元素</p><p>格式：集合名.add(被添加的元素)</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://xt.zmyo.top/2022/10/28/6b3360b7f524c.png"/></div></div><p>2)删除元素</p><p>集合.remove(元素)：删除指定的元素，如果元素不存在，则会报错</p><p>集合.discard(元素):删除指定的元素，元素不存在，不会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">books</span><br><span class="line">&#123;<span class="string">&#x27;零基础学c语言&#x27;</span>,<span class="string">&#x27;零基础学Python&#x27;</span>,<span class="string">&#x27;零基础学Java&#x27;</span>,<span class="string">&#x27;零基础学PHP&#x27;</span>&#125;</span><br><span class="line">books.remove(<span class="string">&quot;零基础学ava&quot;</span>)</span><br><span class="line">books.remove(<span class="string">&quot;零基础学]ava&quot;</span>)</span><br><span class="line">Traceback（most recent call last）：</span><br><span class="line">  File<span class="string">&quot;&lt;pyshe11#77&gt;”，line1，in&lt;module&gt;</span></span><br><span class="line"><span class="string">    books.remove（&quot;</span>零基础学]ava”）</span><br><span class="line">KeyError:<span class="string">&#x27;零基础学Java&#x27;</span></span><br><span class="line">books.discard（<span class="string">&quot;零基础学]ava”）</span></span><br><span class="line"><span class="string">books</span></span><br><span class="line"><span class="string">&#123;零基础学c语言”，零基础学Python’，零基础学PHP）</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>集合.pop():删除最后一个元素（实际上是随机的）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">books</span><br><span class="line">&#123;<span class="string">&#x27;零基础学c语言&#x27;</span>,<span class="string">&#x27;零基础学Python&#x27;</span>,<span class="string">&#x27;零基础学PHP&#x27;</span>&#125;</span><br><span class="line">books.pop()</span><br><span class="line"><span class="string">&#x27;零基础学c语言&#x27;</span></span><br><span class="line">books</span><br><span class="line">&#123;<span class="string">&#x27;零基础学Python&#x27;</span>,<span class="string">&#x27;零基础学PHP&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>集合.clear():清空集合</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt;books.clear()</span><br><span class="line">&gt;&gt;&gt;books</span><br><span class="line"><span class="built_in">set</span>()</span><br></pre></td></tr></table></figure><p>5、字典</p><p>（1）创建和删除</p><p>使用dict(二元组列表)转换为字典</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postal_code = <span class="built_in">dict</span>([(<span class="string">&#x27;成都&#x27;</span>),(<span class="string">&#x27;自贡&#x27;</span>，<span class="number">643000</span>)])</span><br><span class="line"><span class="built_in">print</span>(postal_code)</span><br></pre></td></tr></table></figure><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a=[[<span class="string">&#x27;成都&#x27;</span>, <span class="number">610000</span>], [<span class="string">&#x27;自贡&#x27;</span>, <span class="number">643000</span>]]</span><br><span class="line">a=((<span class="string">&#x27;成都&#x27;</span>, <span class="number">610000</span>), (<span class="string">&#x27;自贡&#x27;</span>, <span class="number">643000</span>), (<span class="string">&#x27;绵阳&#x27;</span>, <span class="number">621000</span>), (<span class="string">&#x27;广元&#x27;</span>, <span class="number">628000</span>))</span><br><span class="line">a=([<span class="string">&#x27;成都&#x27;</span>, <span class="number">610000</span>], [<span class="string">&#x27;自贡&#x27;</span>, <span class="number">643000</span>])</span><br><span class="line">a=&#123;(<span class="string">&#x27;成都&#x27;</span>, <span class="number">610000</span>), (<span class="string">&#x27;自贡&#x27;</span>, <span class="number">643000</span>)&#125;<span class="comment">#集合的元素可以元组不能是列表</span></span><br></pre></td></tr></table></figure><p>2）使用dict(键1=值1，键2=值2……)创建字典</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postal_code = <span class="built_in">dict</span>(成都=<span class="number">610000</span>,自贡，<span class="number">643000</span>，绵阳=<span class="number">621000</span>，广元=<span class="number">628000</span>)</span><br><span class="line"><span class="built_in">print</span>(postal_code)</span><br></pre></td></tr></table></figure><p>4)使用dict()和zip()函数创建字典</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">city = [<span class="string">&quot;成都&quot;</span>,<span class="string">&quot;自贡&quot;</span>,<span class="string">&quot;绵阳&quot;</span>,<span class="string">&quot;广元&quot;</span>]</span><br><span class="line">code = [<span class="number">610000</span>,<span class="number">643000</span>,<span class="number">621000</span>,<span class="number">628000</span>]</span><br><span class="line">postal_code = <span class="built_in">dict</span>(<span class="built_in">zip</span>(city,code))</span><br><span class="line"><span class="built_in">print</span>(postal_code)</span><br></pre></td></tr></table></figure><p>5)使用dict.formkeys()方法创建</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">postal_code = <span class="built_in">dict</span>.fromkeys([<span class="string">&quot;成都&quot;</span>,<span class="string">&quot;自贡&quot;</span>,<span class="string">&quot;绵阳&quot;</span>,<span class="string">&quot;广元&quot;</span>])</span><br><span class="line"><span class="built_in">print</span>(postal_code)</span><br></pre></td></tr></table></figure><p>dict.fromkeys()一般用来创建空值字典</p><p>6)创建空字典</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;&#125;</span><br><span class="line">dic = <span class="built_in">dict</span>()</span><br></pre></td></tr></table></figure><p>7)删除字典</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">del</span> dic</span><br></pre></td></tr></table></figure><p>(2)字典元素的访问</p><p>1）使用字典名[键]</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&quot;张三&quot;</span>:<span class="string">&quot;天蝎座&quot;</span>,<span class="string">&quot;李四&quot;</span>:<span class="string">&quot;射手座&quot;</span>,<span class="string">&quot;王五&quot;</span>:<span class="string">&quot;天秤座&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dic)</span><br><span class="line"><span class="built_in">print</span>(李四的星座为：<span class="string">&quot;，dic[&#x27;李四&#x27;])</span></span><br></pre></td></tr></table></figure><p>​                                {“张三”:”天蝎座”,”李四”:”射手座”,”王五”:”天秤座”}</p><p>​                                李四的星座为：射手座</p><p>注意：访问字典的某个元素时，要先判断该键是否存在</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&quot;张三&quot;</span>:<span class="string">&quot;天蝎座&quot;</span>,<span class="string">&quot;李四&quot;</span>:<span class="string">&quot;射手座&quot;</span>,<span class="string">&quot;王五&quot;</span>:<span class="string">&quot;天秤座&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;王四&#x27;</span> <span class="keyword">in</span> dic:</span><br><span class="line"><span class="built_in">print</span>(王四的星座为：<span class="string">&quot;，dic[&#x27;李四&#x27;])</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">print(王四不存在)</span></span><br></pre></td></tr></table></figure><p>2）使用字典对象的get()方法</p><p>格式：字典名.get(key,default=None）<br>参数：<br>key：指定的键。<br>default:可选，用于指定当指定的”键“不存在时的返回值，如果省略则返回None。</p><p>访问的键存在时，返回其对应的值，不存在时返回提示语句。</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">&quot;张三&quot;</span>:<span class="string">&quot;天蝎座&quot;</span>,<span class="string">&quot;李四&quot;</span>:<span class="string">&quot;射手座&quot;</span>,<span class="string">&quot;王五&quot;</span>:<span class="string">&quot;天秤座&quot;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(dic)</span><br><span class="line"><span class="built_in">print</span>(王四的星座为：<span class="string">&quot;，dic.get(&#x27;王四&#x27;,&quot;</span>不存在<span class="string">&quot;))</span></span><br></pre></td></tr></table></figure><p>（3）字典的遍历</p><p>1）获取”键:值”对</p><p>​        方法：字典名items()</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    dic = &#123;<span class="string">&quot;张三&quot;</span>: <span class="string">&quot;天蝎座&quot;</span>, <span class="string">&quot;李四&quot;</span>: <span class="string">&quot;射手座&quot;</span>, <span class="string">&quot;王五&quot;</span>: <span class="string">&quot;天秤座&quot;</span>&#125;</span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;for i in dic:   #默认遍历的是键</span></span><br><span class="line"><span class="string">        print(i)&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic.keys():    <span class="comment">#遍历键</span></span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;for k,v in dic.items():      #遍历键值对</span></span><br><span class="line"><span class="string">        print(k,v)&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;for v in dic.values():          #遍历值</span></span><br><span class="line"><span class="string">        print(v)&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">python</summary>
    
    
    
    
  </entry>
  
</feed>
