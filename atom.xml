<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>明于</title>
  
  <subtitle>~blog</subtitle>
  <link href="https://www.zmyo.top/atom.xml" rel="self"/>
  
  <link href="https://www.zmyo.top/"/>
  <updated>2022-09-22T09:00:00.000Z</updated>
  <id>https://www.zmyo.top/</id>
  
  <author>
    <name>纪棠</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>windows服务器</title>
    <link href="https://www.zmyo.top/undefined/winserver.html"/>
    <id>https://www.zmyo.top/undefined/winserver.html</id>
    <published>2022-09-22T09:00:00.000Z</published>
    <updated>2022-09-22T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p> dhcp服务器</p><p>手动更新租约：ipconfig/renew</p><p>释放租约：ipconfig/release</p>]]></content>
    
    
    <summary type="html">winserver</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>时间轴</title>
    <link href="https://www.zmyo.top/undefined/time.html"/>
    <id>https://www.zmyo.top/undefined/time.html</id>
    <published>2022-09-22T09:00:00.000Z</published>
    <updated>2022-09-22T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-9-16</p></div></div><div class='timeline-item-content'><p>blog建成</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-9-17</p></div></div><div class='timeline-item-content'><p>cisco</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-9-19</p></div></div><div class='timeline-item-content'><p>python</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-9-20</p></div></div><div class='timeline-item-content'><p>windows服务器</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022-9-21</p></div></div><div class='timeline-item-content'><p>linux服务器</p></div></div></div>]]></content>
    
    
    <summary type="html">time</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>linux服务器</title>
    <link href="https://www.zmyo.top/undefined/linux.html"/>
    <id>https://www.zmyo.top/undefined/linux.html</id>
    <published>2022-09-21T16:00:00.000Z</published>
    <updated>2022-09-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>nmcli</p><p>nmcli connection show        #显示网卡会话</p><p>nmcli connection delete ens33        #删除网卡</p><p>nmcli connection add con-name st ifname ens33 type ethernet ipv4.addresses 192.168.1.12/24 ipv4.method manual</p><p>添加一个名字叫st的ens33类型网卡，IP地址为192.168.1.12，子网掩码为/24，为手动更改ip地址</p><p>nmcli connection up st        #启用网卡</p>]]></content>
    
    
    <summary type="html">linux</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>IP承载</title>
    <link href="https://www.zmyo.top/undefined/cisco.html"/>
    <id>https://www.zmyo.top/undefined/cisco.html</id>
    <published>2022-09-19T14:00:00.000Z</published>
    <updated>2022-09-19T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p class='p center logo large'>VLAN中继</p><p class='p center small'>多交换环境中的vlan</p><details class="folding-tag" blue><summary> 端口安全：违规模式 </summary>              <div class='content'>              <p>保护 限制 关闭</p>              </div>            </details><details class="folding-tag" green><summary> 端口安全：配置 </summary>              <div class='content'>              <p>控制台：line console 0</p><p>int f0/1</p><p>switchport mode access    设置端口通行</p><p>switchport port-security  开启安全模式</p><p>switchport port-security  mac-address sticky  动态</p><p>switchport port-security maximum 1   设置最大</p><p>Switch(config-if)#description pc1 //设置端口描述<br>Switch(config-if)#duplex full  //设置端口工作模式（全双工）<br>Switch(config-if)#speed 100  //设置端口速度 （为100MbPS）<br>Switch(config-if)#switchport mode access //端口连接模式（用户或接入）<br>Switch(config-if)#switchport port-security //开启端口安全功能<br>Switch(config-if)#switchport port-security mac-address ?<br> H.H.H  48 bit mac address  //具体MAC地址 //静态绑定<br> sticky Configure dynamic secure addresses as sticky //通过交换机学习的MAC地址<br>Switch(config-if)#switchport port-security mac-address sticky //绑定MAC地址<br>Switch(config-if)#switchport port-security maximum 1 //设置最大的MAC地址数<br>Switch(config-if)#switchport port-security violation ? //设置违例事件<br> protect  Security violation protect mode  //保护<br> restrict Security violation restrict mode  //限制<br> shutdown Security violation shutdown mode  //关闭<br>Switch(config-if)#switchport port-security violation shutdown //违规后直接关闭端口</p><p>路由器配置：<br>1、ip ssh version 2   查看ssh版本号    设置ssh2版本<br>2、enable secret 2022   配置特权模式口令<br>3、ip domain-name zmy.com   配置IP域<br>4、cry key generate rsa    设置RSA密钥对<br>5、username zmy secret sshmima    设置用户身份验证<br>6、line vty 0 10    配置vty线路<br>7、transport input ssh<br>8、login local<br>交换机配置：<br>int vlan 1<br>no shut<br>ip add 172.16.1.2 255.255.255.0    配置vlan地址<br>exit<br>ip default-gateway 172.16.1.1    配置交换机默认网关</p><p>ssh链接(主机)：ssh -l zmy 172.16.1.1</p>              </div>            </details><details class="folding-tag" yellow open><summary> #####vtp创建 </summary>              <div class='content'>              <ol><li>vtp domain ni        #创建vtp域名</li><li>vtp mode server            #设置成服务器模式</li><li>vtp mode client                #设置为客户段模式</li><li>vtp mode transparent        #设置传输模式</li><li>vtp password 123            #设置vtp密码（客户端和服务器端密码一致）</li></ol>              </div>            </details>]]></content>
    
    
    <summary type="html">cisco</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Python</title>
    <link href="https://www.zmyo.top/undefined/python.html"/>
    <id>https://www.zmyo.top/undefined/python.html</id>
    <published>2022-09-19T09:00:00.000Z</published>
    <updated>2022-09-19T09:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>python3中有六个标准的数据类型：<br>Number（数字）<br>  分三类：整型：不限制大小、无论多复杂的算式都可以直接得到结果<br>divmod<br>abs<br>十进制：无前缀<br>2进制：0b或0B<br>8进制：0o或0O<br>16进制：0x或0X<br>布尔类型（bool）：<br>True（真）<br>False（假）</p><pre><code>     浮点型 复数</code></pre><p>string（字符串）<br>List（列表）<br>Tuple（元组）<br>set（集合）<br>Dictionary（字典）</p><p>函数<br>说明<br>int（x）        将x字符串或数字转换为整型<br>float(x）    将x字符串或数字转换为浮点数<br>Str(X）        将对象×转换为字符串<br>chr（x）        将一个整数转换为对应的ASCII字符<br>ord(x）        将一个ASCII字符转换为对应的整数<br>bin()        将整数转换为2进制字符<br>list(s）        将序列s转换为一个列表<br>tuple(s）    将序列s转换为一个元组<br>Set(s）        转换为可变集合<br>dict(d）        转化为字典。d必须是一个（keyvalue）元组序列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">int3=111</span><br><span class="line">float3=3.14</span><br><span class="line">str3=&quot;曾明于&quot;</span><br><span class="line">list3 = [1,3.14,True,(1,2,3)]</span><br><span class="line">tuple3 = (1,&quot;曾明于&quot;,[1,2,3])</span><br><span class="line">set3 = &#123;1,3.14,&quot;曾明于&quot;,None,(1,2,3)&#125;</span><br><span class="line">dic3 = &#123;1:&quot;123&quot;,2:&quot;six&quot;,3:&quot;qwer&quot;&#125;</span><br></pre></td></tr></table></figure><h5 id="变量和常量ceshi"><a href="#变量和常量ceshi" class="headerlink" title="变量和常量ceshi"></a>变量和常量ceshi</h5><p>1、变量的概念</p><p>​        在程序的运行过程中，其值可以改变的量，叫做变量</p><p>2、变量的三大特性</p><p>​        值：vlaue</p><p>​        内存地址：id</p><p>​        变量的类型：type</p><h5 id="变量的创建、修改、引用变量"><a href="#变量的创建、修改、引用变量" class="headerlink" title="变量的创建、修改、引用变量"></a>变量的创建、修改、引用变量</h5><p>一、python中创建变量无需事先声明变量名和变量的类型，直接赋值即可；</p><p>1）基本赋值</p><p>变量名 = 表达式</p><p>例： name = “张三”</p><p>2）合并赋值</p><p>变量名1=变量名2=……=表达式</p><p>3）按顺序依次赋值</p><p>变量名1，变量名2,……=表达式1，表达式2，……</p><p>4）复合赋值</p><p>变量名 复合赋值运算符 表达式</p><h5 id="变量的应用"><a href="#变量的应用" class="headerlink" title="变量的应用"></a>变量的应用</h5><p>变量出现在赋值运算符的左边即为赋值，否则都为引用</p><h5 id="变量名的命名规范"><a href="#变量名的命名规范" class="headerlink" title="变量名的命名规范"></a>变量名的命名规范</h5><p>变量名属于标识符，其命名要求同标识符要求一样</p><p>建议：选择有意义的单词作为变量名，提高程序的可读性</p><p>不要使用内置名称作为变量名</p><h5 id="变量名的命名风格"><a href="#变量名的命名风格" class="headerlink" title="变量名的命名风格"></a>变量名的命名风格</h5><p>风格一：驼峰法</p><p>风格二：下划线法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; AgeOfBob = 18#大驼峰命名法</span><br><span class="line">&gt;&gt;&gt; ageOfBob = 18 #小驼峰命名法</span><br><span class="line">&gt;&gt;&gt; age_of_bob = 18#下划线命名法</span><br></pre></td></tr></table></figure><h5 id="变量的特点"><a href="#变量的特点" class="headerlink" title="变量的特点"></a>变量的特点</h5><p>1、 变量的类型随赋的值的类型改变</p><p>2、变量的取值采用的是基于值的内存管理方式保存其取值</p><p>为不同的变量赋予相同的值，在内存中该值只有一份，其同享同一个内存空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">x = 5</span><br><span class="line">y = 5</span><br><span class="line"></span><br><span class="line">print(id(x))</span><br><span class="line">print(id(y))</span><br></pre></td></tr></table></figure><p>文件模式：只要为不同的变量赋予相同的值，这些变量就是同享同一个内存空间。</p><p>交互式模式：</p><p>同语句：只要为不同的变量赋予相同的值，这些变量就是同享同一个内存空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a = b = 5</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140715425453856</span><br></pre></td></tr></table></figure><p>不同语句：为不同的变量赋予[-5.256]区域的整数才共享空间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a = 5</span><br><span class="line">&gt;&gt;&gt; b = 5</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">140715425453856</span><br><span class="line">&gt;&gt;&gt; a = -10</span><br><span class="line">&gt;&gt;&gt; b = -10</span><br><span class="line">&gt;&gt;&gt; id(a)</span><br><span class="line">2163999931504</span><br><span class="line">&gt;&gt;&gt; id(b)</span><br><span class="line">2163999931536</span><br></pre></td></tr></table></figure><h5 id="pyhton变量"><a href="#pyhton变量" class="headerlink" title="pyhton变量"></a>pyhton变量</h5><p>自动内存管理功能</p><p>Python具有自动内存管理功能，对于没有任何变量指向的值，Python自动将其删除。<br>显式使用del命令删除不需要的值或显式关闭不再需要访问的资源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">del a#del 对象名</span><br></pre></td></tr></table></figure><h5 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h5><p>在python中没有专门的语法定义常量，约定全部用大写的变量名表示常量。例：PI=3.1415926。</p><p>常量的使用和变量的使用完全一致，本质还是变量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; PI = 3.14</span><br></pre></td></tr></table></figure><h5 id="4、运算符和表达式"><a href="#4、运算符和表达式" class="headerlink" title="4、运算符和表达式"></a>4、运算符和表达式</h5><p>（1）算术运算符</p><p>+</p><p>-</p><ul><li>​      乘法</li></ul><p>/            除法运算，结果保留小数    5 / 2 = 2.5</p><p>//            取整数运算，结果向下取整    -5 // 2 = -3</p><p>%            取余运算    10 % 4 =  2</p><p><strong>            幂运算        2 </strong> 3 = 8</p><p>（2）比较（关系）运算符</p><p>大于         &gt;</p><p>大于等于   &gt;=</p><p>小于          &lt;</p><p>小于等于    &lt;=</p><p>等于           =</p><p>不等于        !=</p><p>（3）赋值运算符</p><p>基本赋值            a = 5</p><p>合并赋值            a = b = c = 10</p><p>按顺序依次赋值   a,b,c = 5,10,15</p><p>复合赋值             a <em>= 2    相当于 a = a</em>2            #a变量必须先创建</p><p>海象运算符</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; str1 = &quot;hello world&quot;</span><br><span class="line">&gt;&gt;&gt; if (length := len(str1)) &gt; 0 :</span><br><span class="line">print(f&quot;字符串的长度为&#123;length&#125;&quot;)</span><br><span class="line"></span><br><span class="line">字符串的长度为11</span><br></pre></td></tr></table></figure><p>（4）逻辑运算符</p><p>与            表达式1    and    表达式2        #返回的是最后一个被计算的表达式的值</p><p>​                                                            #表达式1为真时，表达式2才执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a,b,c=5,10,15</span><br><span class="line">&gt;&gt;&gt; (x := a &gt; b) and (y := b &gt; c)</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; x</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; a and (y := b &gt; c)</span><br><span class="line">False</span><br></pre></td></tr></table></figure><p>或            表达式1    or       表达式2                #返回的是最后一个被计算的表达式的值</p><p>​                                                                    #表达式1为假是，表达式2才执行<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; a or b</span><br><span class="line">5</span><br><span class="line">&gt;&gt;&gt; &quot;&quot; or b</span><br><span class="line">10</span><br></pre></td></tr></table></figure></p><p>非            not    表达式                                        #相当于取反</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">&gt;&gt;&gt; not a</span><br><span class="line">False</span><br><span class="line">&gt;&gt;&gt; not &quot;&quot;</span><br><span class="line">True</span><br></pre></td></tr></table></figure><p>（5）位运算符</p><p>位与            操作数1        &amp;        操作数2            #同为1，则为1，否则为0</p><p>位或             操作数1        |         操作数2            #有1则为1，否则为0</p><p>位异或          操作数1        ^          操作数2            #相同为0，相异为1</p><p>位取反~                        ~操作数                            #0变1，1变0</p><p>左移位&lt;&lt;                                                            #高位移出，低位补0</p><p>友移位&gt;&gt;                                                            #低位移出，高位原来是什么就补什么</p><p>（6）成员运算符</p><ul><li>作用：测试某个对象是否是序列（字符串、列表、元组、集合、字典）的成员</li></ul><p>运算符：in                #判断是序列的成员</p><p>​            not    in         #</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">3</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="number">4</span> <span class="keyword">in</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&#x27;a&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&quot;hello&quot;</span></span><br><span class="line"><span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>（7）同一性测试运算符</li></ul><p>作用：判断不同的对象是否引用于同一内存单元。（判断内存地址是否一样）</p><p>运算符：is            #判断是同一内存单元</p><p>​            is    not    #判断不是同一内存单元</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">True</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> <span class="keyword">not</span> b</span><br><span class="line"><span class="literal">False</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = -<span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>b = -<span class="number">50</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a <span class="keyword">is</span> b</span><br><span class="line"><span class="literal">False</span></span><br></pre></td></tr></table></figure><ul><li>（8）集合运算符</li></ul><p>作用：求集合的交集、并集、差集、对称差集，集合的比较</p><p>运算符：</p><p>​            交集    &amp;</p><p>​            并集    |</p><p>​            差集    -</p><p>​            对称差集    ^</p><p>​            集合的比较用的关系运算符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">b = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">a&amp;b = &#123;<span class="number">1</span>,<span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">a|b = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">a-b = &#123;<span class="number">2</span>&#125;</span><br><span class="line"></span><br><span class="line">a^b = &#123;<span class="number">2</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure><p>运算符优先级：使用圆括号可以改变表达式计算的优先级</p><p>注意：逗号不是运算符，为普通分隔符；python不支持自加（++）和自减（—）</p><h5 id="输入和输出"><a href="#输入和输出" class="headerlink" title="输入和输出"></a>输入和输出</h5><p>（1）输入函数—input（）</p><p>形式和返回值：变量 = input(“提示语句”)        #输入的数据（返回值）为字符串类型</p><p>​    输入一个数据：变量 = input(“提示语句”)</p><p>​    输入多个数据（指定输入分隔符）：需使用字符串的split()方法指定输入分隔符</p><p>​        变量 = input(“提示语句”).split(“指定分隔符”)        #分隔符默认为空格</p><p>​                                                                                #输入的数据以字符串类型的列表来保存</p>]]></content>
    
    
    <summary type="html">python</summary>
    
    
    
    
  </entry>
  
</feed>
